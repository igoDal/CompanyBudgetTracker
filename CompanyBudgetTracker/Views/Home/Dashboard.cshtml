@model DashboardModel
<style>
    .dashboard {
        max-width: 600px;
        margin: auto;
    }
</style>

<form id="dateForm" asp-action="Dashboard" method="get">
    <div class="date-selection">
        <label for="startDate">From:</label>
        <input type="date" id="startDate" name="startDate" value="@Model.StartDate.ToString("yyyy-MM-dd")" />

        <label for="endDate">To:</label>
        <input type="date" id="endDate" name="endDate" value="@Model.EndDate.ToString("yyyy-MM-dd")" />

        <button type="submit">Show</button>
    </div>
    <div class="predefined-ranges">
        <button type="button" onclick="setDateRange('last30days')">Last 30 Days</button>
        <button type="button" onclick="setDateRange('last3months')">Last 3 Months</button>
        <button type="button" onclick="setDateRange('lastyear')">Last Year</button>
    </div>
</form>

<div class="dashboard">
    <h2>Dashboard</h2>
    <canvas id="incomeVsExpensesChart" width="400" height="200"></canvas>
    <div>Total Income: @Model.TotalIncome</div>
    <div>Total Expenses: @Model.TotalExpenses</div>
    <div>Net Income: @Model.ResultIncome</div>
</div>

@section Scripts
{
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        var ctx = document.getElementById('incomeVsExpensesChart').getContext('2d');
        var incomeVsExpensesChart = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: ['Income', 'Expenses', 'Net Income'],
                datasets: [{
                    label: 'Amount',
                    data: [@Model.TotalIncome, @Model.TotalExpenses, @Model.ResultIncome],
                    backgroundColor: [
                        'rgba(75, 192, 192, 0.2)',
                        'rgba(255, 99, 132, 0.2)',
                        'rgba(153, 102, 255, 0.2)'
                    ],
                    borderColor: [
                        'rgba(75, 192, 192, 1)',
                        'rgba(255, 99, 132, 1)',
                        'rgba(153, 102, 255, 1)'
                    ],
                    borderWidth: 1
                }]
            },
            options: {
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });
    </script>
    <script>
        function setDateRange(range) {
            const form = document.getElementById('dateForm');
            const startDateInput = document.getElementById('startDate');
            const endDateInput = document.getElementById('endDate');

            let startDate, endDate;

            switch (range) {
                case 'last30days':
                    startDate = new Date();
                    startDate.setDate(startDate.getDate() - 30);
                    endDate = new Date();
                    break;
                case 'last3months':
                    startDate = new Date();
                    startDate.setMonth(startDate.getMonth() - 3);
                    endDate = new Date();
                    break;
                case 'lastyear':
                    startDate = new Date();
                    startDate.setFullYear(startDate.getFullYear() - 1);
                    endDate = new Date();
                    break;
            }

            startDateInput.value = startDate.toISOString().split('T')[0];
            endDateInput.value = endDate.toISOString().split('T')[0];

            form.submit();
        }
    </script>
}
